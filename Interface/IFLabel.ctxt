#BlueJ class context
comment0.target=IFLabel
comment0.text=\r\n\ Die\ Klasse\ IFLabel\ erbt\ von\ IFComponent\ und\ ist\ ein\ wichtiges\ Element\ unserer\ Benutzeroberfl\u00E4che.\r\n\ Sie\ ist\ darauf\ spezialisiert,\ Texte\ unterschiedlich\ anzuzeigen.\ So\ verf\u00FCgt\ sie\ beispielsweise\ \u00FCber\ 9\ verschiede\ Positionierungen\ des\ Texts\ innerhalb\ des\ IFLabels,\ macht\ Unterstreichungen\ in\ unterschiedlichen\ Farben\ m\u00F6glich\ et\ cetera.\r\n\ \r\n\ @Jonathan\ H\u00F6lzer\ &\ Karsten\ R\u00F6mling\r\n\ @18.06.2019\r\n
comment1.params=width\ height\ x\ y\ txt
comment1.target=IFLabel(int,\ int,\ int,\ int,\ java.lang.String)
comment1.text=\r\n\ Konstruktormethode\ der\ Klasse\ IFLabel\:\ Initialisiert\ Attribute,\ ruft\ die\ Konstruktormethode\ der\ Parent\ Class\ auf,\ zeichnet\ das\ Label...\r\n\ \r\n\ @param\ width\ \ \ \ \ Breite\r\n\ @param\ height\ \ \ \ \ H\u00F6he\r\n\ @param\ x\ \ \ \ \ x-Position\ im\ Frame\r\n\ @param\ y\ \ \ \ \ y-Position\ im\ Frame\r\n\ @param\ txt\ \ \ \ \ Text\ des\ Labels\r\n
comment10.params=ul
comment10.target=void\ setUnderlining(boolean)
comment10.text=\r\n\ Definiert,\ ob\ der\ Text\ unterstrichen\ werden\ soll.\ Zeichnet\ das\ Label\ neu.\r\n\ \r\n\ @param\ pt\ \ \ \ \ Der\ boolean\ gibt\ an,\ ob\ der\ Text\ unterstrichen\ werden\ soll.\r\n
comment11.params=str\ frc
comment11.target=int\ getStringWidth(java.lang.String,\ java.awt.font.FontRenderContext)
comment11.text=\r\n\ Gibt\ die\ L\u00E4nge\ eines\ Textes\ in\ Pixeln\ aus.\r\n\ \r\n\ @param\ str\ \ \ \ \ Der\ String\ stellt\ den\ Text\ dar,\ der\ auf\ seine\ L\u00E4nge\ in\ Pixeln\ gepr\u00FCft\ werden\ soll.\r\n\ @param\ frc\ \ \ \ \ Das\ FontRenderContext-Objekt\ ist\ das\ Objekt,\ mit\ dem\ der\ Text\ gerendert\ wird.\r\n\ \r\n\ @return\ \ \ \ \ Die\ L\u00E4nge\ des\ Textes\ in\ Pixeln\ als\ Integer.\r\n
comment12.params=g2
comment12.target=void\ beforeImage(java.awt.Graphics2D)
comment12.text=\r\n\ \u00DCberschreibt\ die\ Methode\ public\ void\ beforeImage(Graphics2D\ g2)\ der\ Klasse\ IFComponent,\ die\ mit\ repaint()\ vor\ dem\ Zeichnen\ des\ BufferdImage\ ausgef\u00FChrt\ wird.\r\n\ \r\n\ @param\ g2\ \ \ \ \ Das\ Graphics2D-Objekt,\ das\ die\ in\ dieser\ Methode\ gezeichneten\ Elemente\ zeichnet\ (Ok,\ hier\ wird\ nichts\ gezeichnet...),\ wenn\ repaint()\ ausgef\u00FChrt\ wird.\r\n
comment13.params=g2
comment13.target=void\ beforeText(java.awt.Graphics2D)
comment13.text=\r\n\ Kann\ von\ einer\ Unterklasse\ \u00FCberschrieben\ werden.\r\n\ \r\n\ @param\ g2\ \ \ \ \ Das\ Graphics2D-Objekt,\ das\ die\ in\ dieser\ Methode\ gezeichneten\ Elemente\ zeichnet,\ wenn\ repaint()\ ausgef\u00FChrt\ wird.\r\n
comment14.params=g2
comment14.target=void\ afterImage(java.awt.Graphics2D)
comment14.text=\r\n\ \u00DCberschreibt\ die\ Methode\ public\ void\ afterImage(Graphics2D\ g2)\ der\ Klasse\ IFComponent,\ die\ mit\ repaint()\ nach\ dem\ Zeichnen\ des\ BufferdImage\ ausgef\u00FChrt\ wird.\ Zeichnet\ den\ Text\ gem\u00E4\u00DF\ den\ Attributen.\ Unterteilt\ mit\ "\\n"\ abgetrennte\ Textteile,\r\n\ zeichnet\ sie\ seperat\ und\ erlaubt\ so\ Zeilenumbr\u00FCche.\ Zeichnet\ ggf.\ einen\ Unterstrich.\r\n\ \r\n\ @param\ g2\ \ \ \ \ Das\ Graphics2D-Objekt,\ das\ die\ in\ dieser\ Methode\ gezeichneten\ Elemente\ zeichnet,\ wenn\ repaint()\ ausgef\u00FChrt\ wird.\r\n
comment2.params=
comment2.target=void\ paintST()
comment2.text=\r\n\ F\u00FCllt\ den\ Hintergrund\ des\ IFLabels\ mit\ der\ Hintergrundfarbe.\ Zeichnet\ das\ IFLabel\ neu.\r\n
comment3.params=txt
comment3.target=void\ setText(java.lang.String)
comment3.text=\r\n\ Definiert,\ welchen\ Text\ das\ IFLabel\ haben\ soll.\ Zeichnet\ das\ IFLabel\ neu.\r\n\ \r\n\ @param\ txt\ \ \ \ \ Der\ String\ gibt\ an,\ welchen\ Text\ das\ IFLabel\ haben\ soll.\r\n
comment4.params=c
comment4.target=void\ setColor(java.awt.Color)
comment4.text=\r\n\ Definiert,\ welche\ Hintergrundfarbe\ das\ Label\ haben\ soll.\ Zeichnet\ das\ Label\ neu.\r\n\ \r\n\ @param\ c\ \ \ \ \ Der\ Farbwert\ gibt\ an,\ welche\ Hintergrundfarbe\ das\ Label\ haben\ soll.\r\n
comment5.params=c
comment5.target=void\ setForegroundColor(java.awt.Color)
comment5.text=\r\n\ Definiert,\ welche\ Schriftfarbe\ das\ Label.\ Zeichnet\ das\ Label\ neu.\r\n\ \r\n\ @param\ c\ \ \ \ \ Der\ Farbwert\ gibt\ an,\ welche\ Schriftfarbe\ das\ Label\ haben\ soll.\r\n
comment6.params=c
comment6.target=void\ setUnderliningColor(java.awt.Color)
comment6.text=\r\n\ Definiert,\ welche\ unterstreichende\ Farbe\ das\ Label.\ Zeichnet\ das\ Label\ neu.\r\n\ \r\n\ @param\ c\ \ \ \ \ Der\ Farbwert\ gibt\ an,\ welche\ unterstreichende\ Farbe\ das\ Label\ haben\ soll.\r\n
comment7.params=fnt
comment7.target=void\ setFont(java.awt.Font)
comment7.text=\r\n\ Definiert,\ welche\ Schriftart,\ Schriftdicke\ und\ welcher\ Schrifttyp\ (plain,\ bold\ etc.)\ der\ Text\ des\ Labels\ haben\ soll.\ Zeichnet\ das\ Label\ neu.\r\n\ \r\n\ @param\ f\ \ \ \ \ Das\ Font-Objekt\ gibt\ an,\ welche\ Schriftart,\ Schriftdicke\ und\ welcher\ Schrifttyp\ (plain,\ bold\ etc.)\ der\ Text\ des\ Labels\ haben\ soll.\r\n
comment8.params=bla
comment8.target=void\ setBaselineAddition(int)
comment8.text=\r\n\ Definiert,\ wie\ sehr\ der\ Text\ des\ Labels\ nach\ unten\ oder\ oben\ verschoben\ werden\ soll.\ Zeichnet\ das\ Label\ neu.\r\n\ \r\n\ @param\ bla\ \ \ \ \ Der\ Integer\ gibt\ an,\ wie\ sehr\ der\ Text\ des\ Labels\ nach\ unten\ oder\ oben\ verschoben\ werden\ soll.\r\n
comment9.params=pt
comment9.target=void\ setPositionType(int)
comment9.text=\r\n\ Definiert,\ wie\ der\ Text\ innerhalb\ des\ Labels\ positioniert\ werden\ soll.\ M\u00F6gliche\ Parameter\ sind\ als\ statische\ Attribute\ der\ Klasse\ verf\u00FCgbar,\ beispielsweise\ IFLabel.P_CENTER.\ Zeichnet\ das\ Label\ neu.\r\n\ \r\n\ @param\ pt\ \ \ \ \ Der\ Integer\ gibt\ an,\ wie\ der\ Text\ innerhalb\ des\ Labels\ positioniert\ werden\ soll.\ M\u00F6gliche\ Parameter\ sind\ als\ statische\ Attribute\ der\ Klasse\ verf\u00FCgbar,\ beispielsweise\ IFLabel.P_CENTER.\r\n
numComments=15
