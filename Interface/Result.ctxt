#BlueJ class context
comment0.target=Result
comment0.text=\r\n\ Die\ Klasse\ Result\ steuert\ das\ Verhalten\ des\ rechten\ Fensters,\ das\ haupts\u00E4chlich\ die\ basis-Bibliothek\ verwendet\ und\ das\ gezeichnete\ Bild\ zeichnet.\r\n\ Methoden\ wie\ drawLine(int\ x1,\ int\ y1,\ int\ x2,\ int\ y2,\ boolean\ r)\ oder\ drawCircle(int\ px,\ int\ y,\ int\ r)\ zeichnen\ mit\ einem\ basis.IgelStift\ Elemente\r\n\ in\ ein\ basis.Bild.\r\n\ Au\u00DFerdem\ wird\ hier\ mit\ basis.swing.Picture\ der\ Verlauf\ in\ einer\ ArrayList<Picture>\ gespeichert\ und\ es\ wird\ auf\ Eingaben\ des\ Nutzers,\r\n\ beispielsweise\ durch\ die\ Maus\ reagiert.\r\n\ \r\n\ @Jonathan\ H\u00F6lzer\ &\ Karsten\ R\u00F6mling\r\n\ @18.06.2019\r\n
comment1.params=
comment1.target=Result()
comment1.text=\r\n\ Konstruktormethode\ der\ Klasse\ Result.\ Hier\ werden\ Fenster,\ IgelStifte\ und\ Co\ erzeugt,\ das\ Fenster\ angepasst\ und\ zahlreiche\ Attribute\ initialisiert.\r\n
comment10.params=px\ py\ r
comment10.target=void\ drawCircle(int,\ int,\ int)
comment10.text=\r\n\ Zeichnet\ eine\ Kreis.\r\n\ \r\n\ @param\ px\ \ \ \ \ x-Position\ des\ Kreismittelpunkts\r\n\ @param\ px\ \ \ \ \ y-Position\ des\ Kreismittelpunkts\r\n\ @param\ r\ \ \ \ \ Radius\ des\ Kreises\r\n
comment11.params=x1\ y1\ x2\ y2
comment11.target=void\ drawRectangle(int,\ int,\ int,\ int)
comment11.text=\r\n\ Zeichnet\ ein\ Rechteck\ mit\ einer\ Diagonale,\ dessen\ Start-\ und\ Endpunkt\ durch\ die\ Parameter\ festgelegt\ wird.\r\n\ \r\n\ @param\ x1\ \ \ \ \ x-Position\ des\ Startpunkts\ der\ Diagonale\ des\ Rechtecks\r\n\ @param\ y1\ \ \ \ \ y-Position\ des\ Startpunkts\ der\ Diagonale\ des\ Rechtecks\r\n\ @param\ x2\ \ \ \ \ x-Position\ des\ Endpunkts\ der\ Diagonale\ des\ Rechtecks\r\n\ @param\ y2\ \ \ \ \ y-Position\ des\ Endpunkts\ der\ Diagonale\ des\ Rechtecks\r\n
comment12.params=b\ x\ y
comment12.target=boolean\ matches(basis.Bild,\ int,\ int)
comment12.text=\r\n\ Kontrolliert,\ ob\ ein\ Punkt\ auf\ dem\ Bild\ liegt.\r\n\ \r\n\ @param\ b\ \ \ \ \ das\ Bild,\ auf\ dem\ der\ Punkt\ liegen\ soll.\r\n\ @param\ x\ \ \ \ \ x-Koordinate\ des\ Punkts\r\n\ @param\ y\ \ \ \ \ y-Koordinate\ des\ Punkts\r\n\ \r\n\ @return\ \ \ \ \ Gibt\ ein\ boolean\ aus,\ das\ angibt,\ ob\ der\ mit\ x\ und\ y\ dargestellte\ Punkt\ auf\ dem\ Bild\ b\ liegt.\r\n
comment13.params=b\ x
comment13.target=int\ getRealX(basis.Bild,\ int)
comment13.text=\r\n\ Gibt\ die\ Position\ einer\ x-Koordinate\ aus\ der\ Perspektive\ des\ Bildes\ b\ aus.\r\n\ \r\n\ @param\ b\ \ \ \ \ das\ Bild,\ von\ dem\ aus\ die\ x-Koordinate\ betrachtet\ wird.\r\n\ @param\ x\ \ \ \ \ die\ x-Koordinate\r\n\ \r\n\ @return\ \ \ \ \ gibt\ ein\ Integer\ aus,\ das\ die\ x-Koordinate\ aus\ der\ Perspektive\ des\ Bildes\ angibt.\r\n
comment14.params=b\ y
comment14.target=int\ getRealY(basis.Bild,\ int)
comment14.text=\r\n\ Gibt\ die\ Position\ einer\ y-Koordinate\ aus\ der\ Perspektive\ des\ Bildes\ b\ aus.\r\n\ \r\n\ @param\ b\ \ \ \ \ das\ Bild,\ von\ dem\ aus\ die\ x-Koordinate\ betrachtet\ wird.\r\n\ @param\ y\ \ \ \ \ die\ y-Koordinate\r\n\ \r\n\ @return\ \ \ \ \ gibt\ ein\ Integer\ aus,\ das\ die\ y-Koordinate\ aus\ der\ Perspektive\ des\ Bildes\ angibt.\r\n
comment15.params=o\ x\ y
comment15.target=void\ bearbeiteMausBewegt(java.lang.Object,\ int,\ int)
comment15.text=\r\n\ Durch\ das\ Interface\ MausLauscherStandard\ eingef\u00FCgt.\ Reagiert\ auf\ Mausbewegung.\r\n\ \r\n\ @param\ o\ \ \ \ \ keine\ Ahnung,\ was\ das\ f\u00FCr\ ein\ Objekt\ ist.\ In\ der\ Dokumentation\ der\ basis-Bibliothek\ wird\ man\ dar\u00FCber\ leider\ auch\ nicht\ aufgekl\u00E4rt.\r\n\ @param\ x\ \ \ \ \ x-Position\ der\ Maus\r\n\ @param\ y\ \ \ \ \ y-Position\ der\ Maus\r\n
comment16.params=o\ x\ y
comment16.target=void\ bearbeiteMausDruck(java.lang.Object,\ int,\ int)
comment16.text=\r\n\ Durch\ das\ Interface\ MausLauscherStandard\ eingef\u00FCgt.\ Reagiert\ auf\ das\ Dr\u00FCcken\ der\ Maustaste.\r\n\ \r\n\ @param\ o\ \ \ \ \ keine\ Ahnung,\ was\ das\ f\u00FCr\ ein\ Objekt\ ist.\ In\ der\ Dokumentation\ der\ basis-Bibliothek\ wird\ man\ dar\u00FCber\ leider\ auch\ nicht\ aufgekl\u00E4rt.\r\n\ @param\ x\ \ \ \ \ x-Position\ der\ Maus\r\n\ @param\ y\ \ \ \ \ y-Position\ der\ Maus\r\n
comment17.params=o\ x\ y
comment17.target=void\ bearbeiteMausDruckRechts(java.lang.Object,\ int,\ int)
comment17.text=\r\n\ Durch\ das\ Interface\ MausLauscherStandard\ eingef\u00FCgt.\ Reagiert\ auf\ das\ Dr\u00FCcken\ der\ rechten\ Maustaste.\r\n\ \r\n\ @param\ o\ \ \ \ \ keine\ Ahnung,\ was\ das\ f\u00FCr\ ein\ Objekt\ ist.\ In\ der\ Dokumentation\ der\ basis-Bibliothek\ wird\ man\ dar\u00FCber\ leider\ auch\ nicht\ aufgekl\u00E4rt.\r\n\ @param\ x\ \ \ \ \ x-Position\ der\ Maus\r\n\ @param\ y\ \ \ \ \ y-Position\ der\ Maus\r\n
comment18.params=o\ x\ y
comment18.target=void\ bearbeiteMausLosRechts(java.lang.Object,\ int,\ int)
comment18.text=\r\n\ Durch\ das\ Interface\ MausLauscherStandard\ eingef\u00FCgt.\ Reagiert\ auf\ das\ Loslassen\ der\ rechten\ Maustaste.\r\n\ \r\n\ @param\ o\ \ \ \ \ keine\ Ahnung,\ was\ das\ f\u00FCr\ ein\ Objekt\ ist.\ In\ der\ Dokumentation\ der\ basis-Bibliothek\ wird\ man\ dar\u00FCber\ leider\ auch\ nicht\ aufgekl\u00E4rt.\r\n\ @param\ x\ \ \ \ \ x-Position\ der\ Maus\r\n\ @param\ y\ \ \ \ \ y-Position\ der\ Maus\r\n
comment19.params=o\ x\ y
comment19.target=void\ bearbeiteMausGezogen(java.lang.Object,\ int,\ int)
comment19.text=\r\n\ Durch\ das\ Interface\ MausLauscherStandard\ eingef\u00FCgt.\ Reagiert\ auf\ das\ Ziehen\ der\ Maus.\r\n\ \r\n\ @param\ o\ \ \ \ \ keine\ Ahnung,\ was\ das\ f\u00FCr\ ein\ Objekt\ ist.\ In\ der\ Dokumentation\ der\ basis-Bibliothek\ wird\ man\ dar\u00FCber\ leider\ auch\ nicht\ aufgekl\u00E4rt.\r\n\ @param\ x\ \ \ \ \ x-Position\ der\ Maus\r\n\ @param\ y\ \ \ \ \ y-Position\ der\ Maus\r\n
comment2.params=
comment2.target=void\ backup()
comment2.text=\r\n\ F\u00FCgt\ das\ aktuelle\ Bild\ zum\ Verlauf\ hinzu,\ setzt\ die\ aktuelle\ Position\ in\ diesem\ Verlauf\ und\ l\u00F6scht\ ggf.\ Bilder\ aus\ dem\ Verlauf,\ die\ durch\ R\u00FCckg\u00E4ngig-Machen\ und\ neues\ Bearbeiten\ an\ \u00E4lterer\ Stelle\ sinnlos\ geworden\ sind.\r\n
comment20.params=o\ x\ y
comment20.target=void\ bearbeiteMausLos(java.lang.Object,\ int,\ int)
comment20.text=\r\n\ Durch\ das\ Interface\ MausLauscherStandard\ eingef\u00FCgt.\ Reagiert\ auf\ das\ Loslassen\ der\ Maustaste.\r\n\ \r\n\ @param\ o\ \ \ \ \ keine\ Ahnung,\ was\ das\ f\u00FCr\ ein\ Objekt\ ist.\ In\ der\ Dokumentation\ der\ basis-Bibliothek\ wird\ man\ dar\u00FCber\ leider\ auch\ nicht\ aufgekl\u00E4rt.\r\n\ @param\ x\ \ \ \ \ x-Position\ der\ Maus\r\n\ @param\ y\ \ \ \ \ y-Position\ der\ Maus\r\n
comment21.params=o\ x\ y
comment21.target=void\ bearbeiteDoppelKlick(java.lang.Object,\ int,\ int)
comment21.text=\r\n\ Durch\ das\ Interface\ MausLauscherErweitert\ eingef\u00FCgt.\ Reagiert\ auf\ das\ einen\ Doppelklick.\r\n\ \r\n\ @param\ o\ \ \ \ \ keine\ Ahnung,\ was\ das\ f\u00FCr\ ein\ Objekt\ ist.\ In\ der\ Dokumentation\ der\ basis-Bibliothek\ wird\ man\ dar\u00FCber\ leider\ auch\ nicht\ aufgekl\u00E4rt.\r\n\ @param\ x\ \ \ \ \ x-Position\ der\ Maus\r\n\ @param\ y\ \ \ \ \ y-Position\ der\ Maus\r\n
comment22.params=o\ x\ y
comment22.target=void\ bearbeiteMausKlick(java.lang.Object,\ int,\ int)
comment22.text=\r\n\ Durch\ das\ Interface\ MausLauscherErweitert\ eingef\u00FCgt.\ Reagiert\ auf\ das\ einen\ Mausklick.\r\n\ \r\n\ @param\ o\ \ \ \ \ keine\ Ahnung,\ was\ das\ f\u00FCr\ ein\ Objekt\ ist.\ In\ der\ Dokumentation\ der\ basis-Bibliothek\ wird\ man\ dar\u00FCber\ leider\ auch\ nicht\ aufgekl\u00E4rt.\r\n\ @param\ x\ \ \ \ \ x-Position\ der\ Maus\r\n\ @param\ y\ \ \ \ \ y-Position\ der\ Maus\r\n
comment23.params=o\ x\ y
comment23.target=void\ bearbeiteMausKlickRechts(java.lang.Object,\ int,\ int)
comment23.text=\r\n\ Durch\ das\ Interface\ MausLauscherErweitert\ eingef\u00FCgt.\ Reagiert\ auf\ einen\ Rechtsklick.\r\n\ \r\n\ @param\ o\ \ \ \ \ keine\ Ahnung,\ was\ das\ f\u00FCr\ ein\ Objekt\ ist.\ In\ der\ Dokumentation\ der\ basis-Bibliothek\ wird\ man\ dar\u00FCber\ leider\ auch\ nicht\ aufgekl\u00E4rt.\r\n\ @param\ x\ \ \ \ \ x-Position\ der\ Maus\r\n\ @param\ y\ \ \ \ \ y-Position\ der\ Maus\r\n
comment24.params=o\ x\ y
comment24.target=void\ bearbeiteMausHeraus(java.lang.Object,\ int,\ int)
comment25.params=o\ x\ y
comment25.target=void\ bearbeiteMausHinein(java.lang.Object,\ int,\ int)
comment26.params=sender\ t
comment26.target=void\ bearbeiteTaste(basis.Komponente,\ char)
comment26.text=\r\n\ Durch\ das\ Interface\ TastenLauscher\ eingef\u00FCgt.\ Reagiert\ auf\ Tastenbet\u00E4tigung.\r\n\ \r\n\ @param\ sender\ \ \ \ \ Vermutlich\ die\ Komponente,\ von\ die\ Bet\u00E4tigung\ der\ Tastatur\ ausgeht.\r\n\ @param\ t\ \ \ \ \ Gedr\u00FCckter\ Character,\ gedr\u00FCckte\ Taste\r\n
comment3.params=w1\ h1\ w2\ h2\ r
comment3.target=void\ drawLine(int,\ int,\ int,\ int,\ boolean)
comment3.text=\r\n\ Zeichnet\ eine\ Linie\ zwischen\ den\ angegebenen\ Punkten,\ wobei\ die\ Punkte\ selbst\ nicht\ ausgef\u00FCllt\ werden,\ sondern\ hier\ wirklich\ nur\ gestartet\ wird.\r\n\ \r\n\ @param\ w1\ \ \ \ \ der\ x-Wert\ des\ Startpunkts\r\n\ @param\ h1\ \ \ \ \ der\ y-Wert\ des\ Startpunkts\r\n\ @param\ w2\ \ \ \ \ der\ x-Wert\ des\ Endpunkts\r\n\ @param\ h2\ \ \ \ \ der\ y-Wert\ des\ Endpunkts\r\n\ @param\ r\ \ \ \ \ gibt\ an,\ ob\ die\ Linie\ abgerundet\ sein\ soll.\r\n
comment4.params=w1\ h1\ w2\ h2\ r
comment4.target=void\ drawLineEnding(int,\ int,\ int,\ int,\ boolean)
comment4.text=\r\n\ Zeichnet\ eine\ Linie\ zwischen\ den\ angegebenen\ Punkten,\ wobei\ die\ Punkte\ selbst\ ausgef\u00FCllt\ werden.\ Wenn\ die\ Stiftgr\u00F6\u00DFe\ 10\ ist\ und\ r\=true\ ist,\ ist\ hier\ beispielsweise\ der\ Startpunkt\ bereits\ Mittelpunkt\ des\ ersten\ Kreises.\r\n\ \r\n\ @param\ w1\ \ \ \ \ der\ x-Wert\ des\ Startpunkts\r\n\ @param\ h1\ \ \ \ \ der\ y-Wert\ des\ Startpunkts\r\n\ @param\ w2\ \ \ \ \ der\ x-Wert\ des\ Endpunkts\r\n\ @param\ h2\ \ \ \ \ der\ y-Wert\ des\ Endpunkts\r\n\ @param\ r\ \ \ \ \ gibt\ an,\ ob\ die\ Linie\ abgerundet\ sein\ soll.\r\n
comment5.params=c
comment5.target=void\ clearAll(java.awt.Color)
comment5.text=\r\n\ Leert\ das\ Bild,\ setzt\ die\ Hintergrundfarbe,\ sichert\ das\ aktuelle\ Bild.\r\n\ \r\n\ @param\ c\ \ \ \ \ Die\ Color,\ mit\ der\ das\ geleerte\ Bild\ gef\u00FCllt\ werden\ soll\ (Wenn\ man\ auf\ "Leeren"\ dr\u00FCckt,\ ist\ die\ Farbe\ wei\u00DF,\ wenn\ man\ auf\ "Als\ Hintergrundfarbe"\ klickt,\ ist\ die\ Farbe\ die\ aktuell\ ausgew\u00E4hlte\ Farbe).\r\n
comment6.params=
comment6.target=void\ defaults()
comment6.text=\r\n\ Standardwerte\ bzw.\ Standardwert,\ wird\ bei\ Manager.refresh()\ aufgerufen.\r\n
comment7.params=x\ y
comment7.target=void\ setPos(int,\ int)
comment7.text=\r\n\ Setzt\ die\ Position\ des\ IgelStifts\ s,\ ohne\ eine\ Spur\ zu\ hinterlassen.\r\n\ \r\n\ @param\ x\ \ \ \ \ x-Position\ des\ IgelStifts\r\n\ @param\ y\ \ \ \ \ y-Position\ des\ IgelStifts\r\n
comment8.params=x\ y
comment8.target=void\ setDemoPos(int,\ int)
comment8.text=\r\n\ Setzt\ die\ Position\ des\ IgelStifts\ demo,\ ohne\ eine\ Spur\ zu\ hinterlassen.\r\n\ \r\n\ @param\ x\ \ \ \ \ x-Position\ des\ IgelStifts\r\n\ @param\ y\ \ \ \ \ y-Position\ des\ IgelStifts\r\n
comment9.params=x\ y\ r
comment9.target=void\ drawPoint(int,\ int,\ boolean)
comment9.text=\r\n\ Zeichnet\ an\ dem\ Punkt\ P(x|y)\ einen\ Punkt\ in\ der\ aktuellen\ Stiftdicke\ und\ als\ Kreis\ oder\ Quadrat.\r\n\ \r\n\ @param\ x\ \ \ \ \ x-Koordinate\ des\ Punkts\r\n\ @param\ y\ \ \ \ \ y-Koordinate\ des\ Punkts\r\n\ \r\n\ @param\ r\ \ \ \ \ gibt\ an,\ ob\ es\ sich\ bei\ dem\ Punkt\ um\ ein\ Kreis\ oder\ ein\ Quadrat\ handelt.\r\n
numComments=27
