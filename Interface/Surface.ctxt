#BlueJ class context
comment0.target=Surface
comment0.text=\r\n\ Die\ Klasse\ Surface\ kontrolliert\ haupts\u00E4chlich\ die\ Benutzeroberfl\u00E4che\ und\ h\u00E4lt\ das\ Einstellungsfenster.\r\n\ Hier\ werden\ Buttons,\ Texte,\ TextFields\ etc.\ erstellt,\ ihnen\ Eigenschaften\ zugeteilt\ und\ MouseListener\ etc.\ hinzugef\u00FCgt.\r\n\ Auch\ wichtige\ Funktionen\ des\ Programms\ wie\ das\ Abspeichern\ von\ Bildern\ finden\ hier\ statt.\r\n\ \r\n\ @Jonathan\ H\u00F6lzer\ &\ Karsten\ R\u00F6mling\r\n\ @18.06.2019\r\n
comment1.params=result
comment1.target=Surface(Result)
comment1.text=\r\n\ Konstruktormethode\ der\ Klasse\ Surface\:\ Hier\ werden\ KeyListener,\ MouseListener\ etc.\ zugeteilt,\ Attribute\ initialisiert,\ die\ Benutzeroberfl\u00E4che\ wird\ geladen.\r\n\ \r\n\ @param\ result\ \ \ \ \ Das\ Result-Objekt,\ \u00FCber\ das\ das\ Bild\ gestaltet\ wird.\r\n
comment10.params=k
comment10.target=void\ keyTyped(java.awt.event.KeyEvent)
comment100.params=we
comment100.target=void\ createWE(IFComponent)
comment100.text=\r\n\ Erstellt\ ein\ Werkzeug,\ indem\ es\ zur\ ArrayList<IFComponent>,\ damit\ es\ wieder\ gel\u00F6scht\ werden\ kann,\ wenn\ ein\ neues\ Werkzeug\ ausgew\u00E4hlt\ wird,\ und\ zum\ Frame\ hinzugef\u00FCgt\ wird.\r\n\ \r\n\ @param\ we\ \ \ \ \ Das\ Werkzeug,\ das\ hinzugef\u00FCgt\ wird\ (ein\ IFComponent)\r\n
comment101.params=
comment101.target=java.awt.Color\ getFgColor()
comment101.text=\r\n\ Gibt\ aus\ den\ Werten\ f\u00FCr\ Rot,\ Gr\u00FCn\ und\ Blau,\ die\ in\ der\ Klasse\ Surface\ gespeichert\ sind,\ ein\ Color-Objekt\ zur\u00FCck\ (Eigentlich\ eine\ sinnvolle\ Methode,\ ich\ glaube\ allerdings,\ dass\ ich\ sie\ nie\ verwendet\ habe).\r\n\ \r\n\ @return\ \ \ \ \ das\ Color-Objekt,\ das\ sich\ aus\ den\ Werten\ f\u00FCr\ Rot,\ Gr\u00FCn\ und\ Blau\ ergibt.\r\n
comment11.params=k
comment11.target=void\ keyPressed(java.awt.event.KeyEvent)
comment12.params=k
comment12.target=void\ keyReleased(java.awt.event.KeyEvent)
comment13.params=k
comment13.target=void\ keyTyped(java.awt.event.KeyEvent)
comment14.params=e
comment14.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment15.params=e
comment15.target=void\ mouseExited(java.awt.event.MouseEvent)
comment16.params=e
comment16.target=void\ mousePressed(java.awt.event.MouseEvent)
comment17.params=e
comment17.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment18.params=e
comment18.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment19.params=e
comment19.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment2.params=k
comment2.target=void\ keyPressed(java.awt.event.KeyEvent)
comment20.params=e
comment20.target=void\ mouseExited(java.awt.event.MouseEvent)
comment21.params=e
comment21.target=void\ mousePressed(java.awt.event.MouseEvent)
comment22.params=e
comment22.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment23.params=e
comment23.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment24.params=e
comment24.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment25.params=e
comment25.target=void\ mouseExited(java.awt.event.MouseEvent)
comment26.params=e
comment26.target=void\ mousePressed(java.awt.event.MouseEvent)
comment27.params=e
comment27.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment28.params=e
comment28.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment29.params=e
comment29.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment3.params=k
comment3.target=void\ keyReleased(java.awt.event.KeyEvent)
comment30.params=e
comment30.target=void\ mouseExited(java.awt.event.MouseEvent)
comment31.params=e
comment31.target=void\ mousePressed(java.awt.event.MouseEvent)
comment32.params=e
comment32.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment33.params=e
comment33.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment34.params=e
comment34.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment35.params=e
comment35.target=void\ mouseExited(java.awt.event.MouseEvent)
comment36.params=e
comment36.target=void\ mousePressed(java.awt.event.MouseEvent)
comment37.params=e
comment37.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment38.params=e
comment38.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment39.params=e
comment39.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment4.params=k
comment4.target=void\ keyTyped(java.awt.event.KeyEvent)
comment40.params=e
comment40.target=void\ mouseExited(java.awt.event.MouseEvent)
comment41.params=e
comment41.target=void\ mousePressed(java.awt.event.MouseEvent)
comment42.params=e
comment42.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment43.params=e
comment43.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment44.params=e
comment44.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment45.params=e
comment45.target=void\ mouseExited(java.awt.event.MouseEvent)
comment46.params=e
comment46.target=void\ mousePressed(java.awt.event.MouseEvent)
comment47.params=e
comment47.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment48.params=e
comment48.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment49.params=e
comment49.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment5.params=k
comment5.target=void\ keyPressed(java.awt.event.KeyEvent)
comment50.params=e
comment50.target=void\ mouseExited(java.awt.event.MouseEvent)
comment51.params=e
comment51.target=void\ mousePressed(java.awt.event.MouseEvent)
comment52.params=e
comment52.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment53.params=e
comment53.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment54.params=e
comment54.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment55.params=e
comment55.target=void\ mouseExited(java.awt.event.MouseEvent)
comment56.params=e
comment56.target=void\ mousePressed(java.awt.event.MouseEvent)
comment57.params=e
comment57.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment58.params=e
comment58.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment59.params=e
comment59.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment6.params=k
comment6.target=void\ keyReleased(java.awt.event.KeyEvent)
comment60.params=e
comment60.target=void\ mouseExited(java.awt.event.MouseEvent)
comment61.params=e
comment61.target=void\ mousePressed(java.awt.event.MouseEvent)
comment62.params=e
comment62.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment63.params=e
comment63.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment64.params=
comment64.target=void\ updateColor()
comment64.text=\r\n\ Nachdem\ die\ Farbe\ ge\u00E4ndert\ wurde,\ sorgt\ diese\ Methode\ daf\u00FCr,\ dass\ das\ RoundedOrNot-Objekt,\ das\ den\ Stift\ repr\u00E4sentiert,\ die\ Eingabefelder\ f\u00FCr\ die\ Farbe\ und\ ggf.\ der\ gezeichnete\ Text\ mit\ dem\ Werkzeug\ "Text"\ auf\ die\ aktuelle\ \r\n\ Farbe\ aktualisiert\ werden.\r\n
comment65.params=accepted
comment65.target=void\ savingProcedure(boolean)
comment65.text=\r\n\ Fragt\ den\ Nutzer,\ ob\ das\ Bild\ wirklich\ gespeichert\ werden\ soll,\ wenn\ an\ dem\ angegebenen\ Pfad\ bereits\ ein\ Bild\ gespeichert\ ist.\ Speichert\ ansonsten\ das\ Bild\ unter\ dem\ angegebenen\ Pfad\ und\ informiert\ den\ Nutzer,\ ob\ \r\n\ das\ Speichern\ erfolgreich\ geklappt\ hat.\r\n\ \r\n\ @param\ accepted\ \ \ \ Der\ boolean\ gibt\ an,\ ob\ der\ Nutzer\ bereits\ zugestimmt\ hat,\ das\ Bild\ zu\ speichern.\ Wenn\ dies\ der\ Fall\ ist,\ wird\ nicht\ erneut\ \u00FCber\ einen\ Dialog\ gefragt,\ ob\ das\ Bild\ wirklich\ gespeichert\ werden\ soll.\r\n
comment66.params=e
comment66.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment67.params=e
comment67.target=void\ mouseExited(java.awt.event.MouseEvent)
comment68.params=e
comment68.target=void\ mousePressed(java.awt.event.MouseEvent)
comment69.params=e
comment69.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment7.params=k
comment7.target=void\ keyTyped(java.awt.event.KeyEvent)
comment70.params=e
comment70.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment71.params=e
comment71.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment72.params=e
comment72.target=void\ mouseExited(java.awt.event.MouseEvent)
comment73.params=e
comment73.target=void\ mousePressed(java.awt.event.MouseEvent)
comment74.params=e
comment74.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment75.params=e
comment75.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment76.params=
comment76.target=void\ updateExample()
comment76.text=\r\n\ Diese\ Methode\ entfernt\ das\ RoundedOrNot-Objekt\ ex,\ das\ den\ Stift\ in\ seiner\ Gr\u00F6\u00DFe,\ Farbe\ und\ Form\ repr\u00E4sentieren\ soll,\ vom\ Frame\ und\ f\u00FCgt\ es\ als\ neues\ Objekt\ mit\ aktualisierten\ Eigenschaften\ wieder\ hinzu.\r\n
comment77.params=str
comment77.target=boolean\ validText(java.lang.String)
comment77.text=\r\n\ Diese\ Methode\ kontrolliert,\ ob\ der\ eingegebene\ Text\ als\ Farbwert\ korrekt\ ist.\r\n\ \r\n\ @param\ str\ \ \ \ \ Der\ Text,\ der\ auf\ seine\ Korrektheit\ kontrolliert\ werden\ soll.\r\n\ \r\n\ @return\ \ \ \ \ Das\ boolean,\ das\ angibt,\ ob\ der\ Text\ als\ Farbwert\ korrekt\ ist.\r\n
comment78.params=str
comment78.target=boolean\ validTextNormal1(java.lang.String)
comment78.text=\r\n\ Diese\ Methode\ kontrolliert,\ ob\ der\ eingegebene\ Text\ als\ Wert\ f\u00FCr\ die\ Stiftdicke\ korrekt\ ist.\r\n\ \r\n\ @param\ str\ \ \ \ \ Der\ Text,\ der\ auf\ seine\ Korrektheit\ kontrolliert\ werden\ soll.\r\n\ \r\n\ @return\ \ \ \ \ Das\ boolean,\ das\ angibt,\ ob\ der\ Text\ als\ Wert\ f\u00FCr\ die\ Stiftdicke\ korrekt\ ist.\r\n
comment79.params=big
comment79.target=java.lang.String\ getPath(boolean)
comment79.text=\r\n\ Diese\ Methode\ gibt\ den\ Pfad\ einschlie\u00DFlich\ dem\ Dateinamen\ und\ der\ Dateiendung\ durch\ die\ Eingabefelder\ wieder.\ Wenn\ ein\ Backslash\ zwischen\ Dateipfad\ und\ Dateiname\ fehlt,\ wird\ er\ hinzugef\u00FCgt.\r\n\ \r\n\ @param\ big\ \ \ \ \ Das\ boolean,\ das\ angibt,\ ob\ der\ die\ Dateiendung\ in\ Gro\u00DF-\ oder\ Kleinbuchstaben\ angegeben\ werden\ soll.\r\n\ \r\n\ @return\ \ \ \ \ Gibt\ den\ gesamten\ Dateipfad\ als\ String\ aus.\r\n
comment8.params=k
comment8.target=void\ keyPressed(java.awt.event.KeyEvent)
comment80.params=big
comment80.target=void\ loadImage(boolean)
comment80.text=\r\n\ Diese\ Methode\ l\u00E4dt\ das\ Bild\ aus\ dem\ angegebenen\ Dateipfad.\ Wenn\ es\ dabei\ einen\ Fehler\ gibt,\ erscheint\ eine\ Fehlermeldung.\r\n\ \r\n\ @param\ big\ \ \ \ \ Das\ boolean,\ das\ angibt,\ ob\ der\ die\ Dateiendung\ in\ Gro\u00DF-\ oder\ Kleinbuchstaben\ verwendet\ werden\ soll.\r\n
comment81.params=
comment81.target=void\ setFromHistory()
comment81.text=\r\n\ L\u00E4dt\ das\ aktuelle\ Bild\ aus\ dem\ Verlauf\ und\ setzt\ es\ als\ Bild.\r\n
comment82.params=
comment82.target=void\ launchFrame()
comment82.text=\r\n\ Erstellt\ alle\ Elemente\ der\ Benutzeroberfl\u00E4che,\ l\u00E4dt\ ihre\ Eigenschaften\ und\ f\u00FCgt\ sie\ zum\ Frame\ hinzu.\ Setzt\ die\ H\u00F6he\ und\ Breite\ des\ Frames\ und\ macht\ es\ sichtbar.\r\n
comment83.params=
comment83.target=void\ refresh()
comment83.text=\r\n\ Wird\ durch\ Manager.refresh()\ ausgel\u00F6st,\ wenn\ der\ Nutzer\ das\ Werkzeug\ wechselt.\ Zeichnet\ mit\ den\ daf\u00FCr\ erstellten\ Methoden\ "public\ void\ createInfoBox(int\ y,\ String\ txt,\ Color\ bgColor)",\ "public\ void\ createWET(int\ y)"\ und\r\n\ "public\ void\ createWE(IFComponent\ we)"\ InfoBoxes\ und\ Werkzeugeinstellungen.\ Die\ davor\ auf\ dem\ Frame\ befindlichen,\ zu\ einem\ bestimmten\ Werkzeug\ geh\u00F6renden\ Komponenten\ werden\ von\ Frame\ entfernt.\r\n
comment84.params=k
comment84.target=void\ keyPressed(java.awt.event.KeyEvent)
comment85.params=k
comment85.target=void\ keyReleased(java.awt.event.KeyEvent)
comment86.params=k
comment86.target=void\ keyTyped(java.awt.event.KeyEvent)
comment87.params=k
comment87.target=void\ keyPressed(java.awt.event.KeyEvent)
comment88.params=k
comment88.target=void\ keyReleased(java.awt.event.KeyEvent)
comment89.params=k
comment89.target=void\ keyTyped(java.awt.event.KeyEvent)
comment9.params=k
comment9.target=void\ keyReleased(java.awt.event.KeyEvent)
comment90.params=k
comment90.target=void\ keyPressed(java.awt.event.KeyEvent)
comment91.params=k
comment91.target=void\ keyReleased(java.awt.event.KeyEvent)
comment92.params=k
comment92.target=void\ keyTyped(java.awt.event.KeyEvent)
comment93.params=e
comment93.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment94.params=e
comment94.target=void\ mouseExited(java.awt.event.MouseEvent)
comment95.params=e
comment95.target=void\ mousePressed(java.awt.event.MouseEvent)
comment96.params=e
comment96.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment97.params=e
comment97.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment98.params=y\ txt\ bgColor
comment98.target=void\ createInfoBox(int,\ java.lang.String,\ java.awt.Color)
comment98.text=\r\n\ Erstellt\ eine\ InfoBox,\ f\u00FCgt\ sie\ zum\ Frame\ hinzu\ und\ zur\ ArrayList<IFComponent>,\ damit\ sie\ wieder\ gel\u00F6scht\ werden\ kann,\ wenn\ ein\ neues\ Werkzeug\ ausgew\u00E4hlt\ wird.\ Die\ InfoBox\ besteht\ aus\ 2\ IFLabels.\r\n\ \r\n\ @param\ y\ \ \ \ \ y-Position,\ auf\ der\ die\ InfoBox\ erstellt\ werden\ soll.\r\n\ @param\ txt\ \ \ \ \ Der\ Text\ der\ InfoBox.\r\n\ @param\ bgColor\ \ \ \ \ Die\ Hintergrundfarbe\ der\ InfoBox.\r\n
comment99.params=y
comment99.target=void\ createWET(int)
comment99.text=\r\n\ Erstellt\ ein\ IFLabel\ als\ Titel\ f\u00FCr\ die\ Werkzeugeinstellungen\ mit\ der\ Aufschrift\ "Werkzeugeinstellungen"\ und\ f\u00FCgt\ es\ zum\ Frame\ hinzu\ und\ zur\ ArrayList<IFComponent>,\ damit\ es\ wieder\ gel\u00F6scht\ werden\ kann,\ wenn\ ein\ neues\ Werkzeug\ ausgew\u00E4hlt\ wird.\r\n\ \r\n\ @param\ y\ \ \ \ \ y-Position,\ auf\ der\ der\ Titel\ erstellt\ werden\ soll.\r\n
numComments=102
